apiVersion: policy.sigstore.dev/v1beta1
kind: ClusterImagePolicy
metadata:
  name: log4shell-policy
spec:
  images:
  - glob: "**"
  authorities:
  - name: verify custom attestation
    key:
      secretRef:
        name: cosign-pub
    attestations:
    - name: verify SBOM match
      predicateType: custom
      policy:
        type: rego
        data: |
          package sigstore
          import future.keywords

          bad_log4j_versions := {
              "2.0-alpha2",
              "2.0-beta1",
              "2.0-beta2",
              "2.0-beta3",
              "2.0-beta4",
              "2.0-beta5",
              "2.0-beta6",
              "2.0-beta7",
              "2.0-beta8",
              "2.0-beta9",
              "2.0",
              "2.0-rc1",
              "2.0-rc2",
              "2.0.1",
              "2.0.2",
              "2.1",
              "2.2",
              "2.3",
              "2.4",
              "2.4.1",
              "2.5",
              "2.6",
              "2.6.1",
              "2.6.2",
              "2.7",
              "2.8",
              "2.8.1",
              "2.8.2",
              "2.9.0",
              "2.9.1",
              "2.10.0",
              "2.11.0",
              "2.11.1",
              "2.11.2",
              "2.12.0",
              "2.12.1",
              "2.13.0",
              "2.13.1",
              "2.13.2",
              "2.13.3",
              "2.14.0",
              "2.14.1",
              "2.0-alpha1"
          }

          infected_log4j_present(s) {
              some i
              pkg := s.artifacts[i]
              pkg.name == "log4j-core"
              pkg.version == bad_log4j_versions[_]
          }

          inputArtifacts := json.unmarshal(input.predicate.Data)

          default isCompliant = "log4shell CVE detected"

          isCompliant {
            not infected_log4j_present(inputArtifacts)
          }




